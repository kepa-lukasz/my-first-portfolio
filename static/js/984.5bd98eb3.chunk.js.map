{"version":3,"file":"static/js/984.5bd98eb3.chunk.js","mappings":"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","sources":["components/pages/games/sorts/tab_container.js","components/pages/games/sorts/main_sort.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { BsLightningFill } from \"react-icons/bs\"\r\nconst Tabcontainer = (props) => {\r\n\r\n    const [showDivs, setShowDivs] = useState([])\r\n\r\n    useEffect(() => {\r\n\r\n        let divs = [\r\n            <div key=\"d0\" className=\"bg-dark m-1 border border-success bg-black\" style={{ height: \"30px\", width: \"20px\" }}></div>,\r\n            <div key=\"d1\" className=\"bg-dark m-1 border border-success bg-black\" style={{ height: \"60px\", width: \"20px\" }}></div>,\r\n            <div key=\"d2\" className=\"bg-dark m-1 border border-success bg-black\" style={{ height: \"120px\", width: \"20px\" }}></div>,\r\n            <div key=\"d3\" className=\"bg-dark m-1 border border-success bg-black\" style={{ height: \"180px\", width: \"20px\" }}></div>,\r\n            <div key=\"d4\" className=\"bg-dark m-1 border border-success bg-black\" style={{ height: \"210px\", width: \"20px\" }}></div>,\r\n            <div key=\"d5\" className=\"bg-dark m-1 border border-success bg-black\" style={{ height: \"240px\", width: \"20px\" }}></div>,\r\n            <div key=\"d6\" className=\"bg-dark m-1 border border-success bg-black\" style={{ height: \"270px\", width: \"20px\" }}></div>,\r\n            <div key=\"d7\" className=\"bg-dark m-1 border border-success bg-black\" style={{ height: \"300px\", width: \"20px\" }}></div>,\r\n            <div key=\"d8\" className=\"bg-dark m-1 border border-success bg-black\" style={{ height: \"330px\", width: \"20px\" }}></div>,\r\n            <div key=\"d9\" className=\"bg-dark m-1 border border-success bg-black\" style={{ height: \"360px\", width: \"20px\" }}></div>,\r\n            <div key=\"d10\"  className=\"bg-dark m-1 border border-success bg-black\" style={{ height: \"390px\", width: \"20px\" }}></div>,\r\n            <div key=\"d11\"  className=\"bg-dark m-1 border border-success bg-black\" style={{ height: \"420px\", width: \"20px\" }}></div>,\r\n            <div key=\"d12\"  className=\"bg-dark m-1 border border-success bg-black\" style={{ height: \"450px\", width: \"20px\" }}></div>\r\n        ]\r\n        let divstmp = []\r\n        props.tab.forEach(element => {\r\n            divstmp.push(divs[element])\r\n        });\r\n        setShowDivs(divstmp)\r\n\r\n    }, [props.tab])\r\n    return (\r\n        <Container key={props.tab} >\r\n            <Container className=\"d-flex justify-content-evenly align-items-end \">\r\n                {showDivs}\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\nexport default Tabcontainer","import React from \"react\";\r\nimport Tabcontainer from \"./tab_container\";\r\nimport { useState } from \"react\";\r\nimport { Alert, Button, Container } from \"react-bootstrap\";\r\n\r\n//icons\r\nimport { BsLightning, BsExclamationTriangle, BsArrowDownSquare, BsReply, BsGeoAlt } from \"react-icons/bs\"\r\nimport { TbChartBubble } from \"react-icons/tb\"\r\nimport { AiOutlineAim } from \"react-icons/ai\"\r\nimport { RiEmotionSadLine } from \"react-icons/ri\"\r\nconst Mainsort = () => {\r\n\r\n    //set states \r\n\r\n    const [tab, setTab] = useState([9, 1, 4, 2, 11, 7, 3, 8, 5, 12, 6, 10])\r\n    const [info, setInfo] = useState(<p>Wybierz algorytm, lub wymieszaj listÄ™</p>)\r\n    const [isSorting, chIsSorting] = useState(false)\r\n    const [isSorted, chSorted] = useState(false)\r\n    const [show, setShow] = useState(true);\r\n    const [howalert, setalert] = useState()\r\n\r\n    //info display\r\n    const showalert = (info, color) => {\r\n        setShow(true)\r\n        setalert(\r\n            <Alert variant={color} onClose={() => { setShow(false) }} dismissible>\r\n                <Alert.Heading>{info}</Alert.Heading>\r\n            </Alert>\r\n        )\r\n    }\r\n    //wait to show how sorting function step work\r\n    const sleep = (ms) => {\r\n        return new Promise(res => setTimeout(res, ms))\r\n    }\r\n    //randomize array\r\n    const mix = () => {\r\n        if (isSorting) return\r\n        let sortedTab = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\r\n        let idx\r\n        let tabtmp = []\r\n        for (let i = 0; i < 13; i++) {\r\n            idx = Math.floor(Math.random() * sortedTab.length)\r\n            tabtmp.push(sortedTab[idx])\r\n            sortedTab.splice(idx, 1)\r\n        }\r\n        setTab(tabtmp)\r\n        chSorted(false)\r\n    }\r\n    //sorting functions\r\n    const jsSort = () => {\r\n        setShow(false)\r\n        if (isSorting || isSorted) return\r\n        setInfo(<p>JÄ™zyk programowania javascript(w nim aplikacja jest napisana) uznaje liczby w tablicy (typ number) za sÅ‚owa/ciÄ…gi znakÃ³w.\r\n            <br />Chodzi w tym o to, Å¼e funkcja array.sort() potrafi sortowaÄ‡ sÅ‚owa (np. [kot, pies, borsuk] &rarr; [borsuk, kot, pies])\r\n            <br /> Ale z liczbami za to nie dziaÅ‚a, bo liczba 10 jest przed liczbÄ… 2, (1 jest w sÅ‚owniku przed 2 wiÄ™c 10 teÅ¼ jest szybciej niÅ¼ 2)\r\n        </p>)\r\n        chIsSorting(true)\r\n        let tabtmp = tab;\r\n        tabtmp.sort()\r\n        setTab([...tabtmp])\r\n        chIsSorting(false)\r\n        showalert(\"prawie posortowano!\", \"warning\")\r\n        return\r\n    }\r\n    async function bubbleSort() {\r\n        setShow(false)\r\n        if (isSorting || isSorted) return\r\n\r\n        chIsSorting(true)\r\n        setInfo(<p>Algorytm wybiera po kolei pary liczb, ktÃ³re sÄ… obok siebie,\r\n            nastÄ™pnie porÃ³wnanuje je i jeÅ¼eli liczba z lewej strony jest wiÄ™ksza,\r\n            zamienia ja miejscami.</p>)\r\n        let tmp\r\n        let tabtmp = tab\r\n        for (let i = 0; i < tabtmp.length - 1; i++) {\r\n            for (let j = 0; j < tabtmp.length - 1; j++) {\r\n                if (tabtmp[j] > tabtmp[j + 1]) {\r\n                    tmp = tabtmp[j + 1]\r\n                    tabtmp[j + 1] = tabtmp[j]\r\n                    tabtmp[j] = tmp\r\n                    await sleep(400)\r\n                    setTab([...tabtmp])\r\n                }\r\n            }\r\n        }\r\n        chSorted(true)\r\n        chIsSorting(false)\r\n        showalert(\"Posortowano!\", \"success\")\r\n        return\r\n    }\r\n    async function insertSort() {\r\n        setShow(false)\r\n        if (isSorting || isSorted) return\r\n        chIsSorting(true)\r\n\r\n        setInfo(<p>Algorytm wybiera po kolei kaÅ¼dÄ… liczbÄ™ a nastÄ™pnie sprawdza, czy wybrana liczba jest wiÄ™ksza od nastÄ™pnej.\r\n            <br />JeÅ¼eli nie jest, liczba jest wstawiana w to miejsce, czyli przed liczbÄ… wiÄ™kszÄ… od wybranej.\r\n            <br />JeÅ¼eli jest, algorytm sprawdza nastÄ™pnÄ… liczbÄ™ z kolei.\r\n        </p>)\r\n        let tmp\r\n        let tabtmp = tab\r\n        for (let i = 1; i < tabtmp.length; i++) {\r\n            tmp = tabtmp[i]\r\n            let j = i - 1\r\n            while (j >= 0 && tabtmp[j] > tmp) {\r\n                tabtmp[j + 1] = tabtmp[j]\r\n                j = j - 1\r\n            }\r\n            j++\r\n            await sleep(400)\r\n            tabtmp[j] = tmp\r\n            setTab([...tabtmp])\r\n        }\r\n        setTab([...tabtmp])\r\n        chIsSorting(false)\r\n        chSorted(true)\r\n        showalert(\"Posortowano!\", \"success\")\r\n        return\r\n    }\r\n    async function bogoSort() {\r\n        setShow(false)\r\n        if (isSorting) return\r\n        chIsSorting(true)\r\n        setInfo(<p><span className=\"fs-5 text-danger\">Bogo sort nie jest algorytmem sortujÄ…cym!</span><br />\r\n            Jest to rodzaj Å¼artu polegajÄ…cego na losowaniu kolejnoÅ›ci tak dÅ‚ugo, aÅ¼ tablica nie bÄ™dzie posortowana.<br />\r\n            Na potrzeby jego zaprezentowania skrÃ³ciÅ‚em liczbÄ™ elementÃ³w tablicy, bo nigdy by nie posortowaÅ‚o ;)\r\n        </p>)\r\n        setTab([5, 1, 7, 3])\r\n        let sortedTab = [1, 3, 5, 7]\r\n\r\n        let loop = true\r\n        let idx\r\n\r\n        for (let j = 0; j < 20; j++) {\r\n            let sorted = true;\r\n            let tabtmp = []\r\n            if (!loop) {\r\n                break\r\n            }\r\n            await sleep(400)\r\n\r\n            for (let i = 0; i < 5; i++) {\r\n                idx = Math.floor(Math.random() * sortedTab.length)\r\n                tabtmp.push(sortedTab[idx])\r\n                sortedTab.splice(idx, 1)\r\n            }\r\n            sortedTab = [1, 3, 5, 7]\r\n            setTab(tabtmp)\r\n            for (let i = 0; i < sortedTab.length; i++)\r\n                if (tabtmp[i] != sortedTab[i]) {\r\n                    sorted = false;\r\n                    break;\r\n                }\r\n            loop = !sorted\r\n        }\r\n        (loop) ?\r\n            showalert(\"Nie udaÅ‚o siÄ™ posortowac tablicy przy 20 podejÅ›ciach, wiÄ™c przerwano dziaÅ‚anie kodu!\", \"danger\")\r\n            : showalert(\"UdaÅ‚o siÄ™!\", \"success\")\r\n        chIsSorting(false)\r\n        chSorted(true)\r\n        return\r\n    }\r\n    async function chooseSort() {\r\n        setShow(false)\r\n        if (isSorting || isSorted) return\r\n\r\n        chIsSorting(true)\r\n        setInfo(<p>Algorytm po kolei szuka najmniejszej wartoÅ›ci, nastÄ™pnie zamienia jÄ… miejscem z wartoÅ›ciÄ… na poczÄ…tku listy.<br />\r\n            Algorytm za kaÅ¼dym razem rozpoczyna dziaÅ‚anie od kolejnego elementu tablicy(Ten najmniejszy element jest na poczÄ…tku, wiÄ™c moÅ¼emy go pominÄ…Ä‡).\r\n        </p>)\r\n        let tabtmp = tab\r\n        let swapTmp\r\n\r\n        for (let i = 0; i < tabtmp.length - 1; i++) {\r\n            let min = i\r\n            for (let j = i + 1; j < tabtmp.length; j++) {\r\n                if (tabtmp[j] < tabtmp[min])\r\n                    min = j\r\n            }\r\n            if (min !== i) {\r\n                swapTmp = tabtmp[i]\r\n                tabtmp[i] = tabtmp[min]\r\n                tabtmp[min] = swapTmp\r\n            }\r\n            await sleep(400)\r\n            setTab([...tabtmp])\r\n        }\r\n        chIsSorting(false)\r\n        chSorted(true)\r\n        showalert(\"Posortowano!\", \"success\")\r\n\r\n    }\r\n    return (\r\n        <Container>\r\n            {(show) ? howalert : null}\r\n            <Container className=\"px-3 py-3 mb-3 border border-success rounded-3\">\r\n                <p className=\"p-0 m-0\">{info}</p>\r\n            </Container>\r\n            <Container className=\"px-3 py-3 border border-success rounded-3\">\r\n\r\n\r\n                <Tabcontainer key={tab} tab={tab} />\r\n\r\n                <hr className=\"mt-4 border border-success border-1\" />\r\n\r\n                <Container className=\"d-flex justify-content-evenly flex-wrap\">\r\n                    <Button disabled={isSorted} variant=\"outline-warning fs-5 d-flex align-items-center my-2 mx-1\" onClick={jsSort}>\r\n                        <RiEmotionSadLine />&nbsp;sortowanie javascript\r\n                    </Button>\r\n{/* \r\n                    <Button disabled={isSorted} variant=\"outline-primary fs-5 d-flex align-items-center my-2 mx-1\" onClick={quickSort}>\r\n                        <BsLightning />&nbsp;sortowanie szybkie\r\n                    </Button> */}\r\n                     <button type=\"button\" className=\"opacity-25 fs-5 py-0 btn btn-outline-primary position-relative my-2 mx-1\">\r\n                        <span class=\"position-absolute top-0 start-50 translate-middle badge rounded-pill bg-secondary\">\r\n                            wkrÃ³tce dostÄ™pne\r\n                        </span>\r\n                        <span className=\"p-0\"> <BsLightning />&nbsp;sortowanie szybkie</span>\r\n\r\n                    </button>\r\n\r\n                    <Button disabled={isSorted} variant=\"outline-success fs-5 d-flex align-items-center my-2 mx-1\" onClick={bubbleSort}>\r\n                        <TbChartBubble />&nbsp;sortowanie bÄ…belkowe\r\n                    </Button>\r\n                    <Button disabled={isSorted} variant=\"outline-success fs-5 d-flex align-items-center my-2 mx-1\" onClick={insertSort}>\r\n                        <BsArrowDownSquare />&nbsp;sortowanie przez wstawianie\r\n                    </Button>\r\n                    <Button disabled={isSorted} variant=\"outline-success fs-5 d-flex align-items-center my-2 mx-1\" onClick={chooseSort}>\r\n                        <AiOutlineAim />&nbsp;sortowanie przez wybÃ³r\r\n                    </Button>\r\n\r\n                    <Button variant=\"outline-danger fs-5 d-flex align-items-center my-2 mx-1\" onClick={bogoSort}>\r\n                        <BsExclamationTriangle />&nbsp;Bogo\r\n                    </Button>\r\n                    <Button variant=\"success fs-5 d-flex align-items-center my-2 mx-1\" onClick={mix}>\r\n                        <BsReply />&nbsp; wylosuj kolejnoÅ›Ä‡\r\n                    </Button>\r\n                </Container>\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\nexport default Mainsort"],"names":["props","useState","showDivs","setShowDivs","useEffect","divs","className","style","height","width","divstmp","tab","forEach","element","push","Container","setTab","info","setInfo","isSorting","chIsSorting","isSorted","chSorted","show","setShow","howalert","setalert","showalert","color","Alert","variant","onClose","dismissible","sleep","ms","Promise","res","setTimeout","tabtmp","i","length","j","tmp","sortedTab","loop","sorted","idx","Math","floor","random","splice","min","swapTmp","Button","disabled","onClick","sort","type","class"],"sourceRoot":""}