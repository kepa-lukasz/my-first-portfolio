{"version":3,"file":"static/js/137.5087adc7.chunk.js","mappings":"oNA4HA,UAtHe,WACb,IAAIA,EACJ,GAA4BC,EAAAA,EAAAA,UAAS,IAAG,eAAjCC,EAAM,KAAEC,EAAS,KAGpBC,EAAU,EACVC,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7BC,EAAS,SAATA,EAAUC,GAEdC,EAAgBD,IACd,SAAC,IAAG,CAAWE,UAAU,sCAAqC,UAC5D,SAAC,IAAM,CAACC,UAAQ,EAACD,UAAU,wCAAwCE,QAASL,EAAOM,KAAK,EAAML,GAAK,SAC/FH,EAAU,IAAM,GAAK,SAAC,MAAQ,CAACS,KATxB,MAS6C,SAAC,MAAK,CAACA,KATpD,QAOHN,GAMZO,GAAU,OAAIN,IACdJ,IAEAJ,EAASI,EAAU,IAAM,EAAK,GAAK,EAIvB,IAARG,GAAqB,IAARA,GAAqB,IAARA,EAC5BF,EAAO,IAAML,EAEE,IAARO,GAAqB,IAARA,GAAqB,IAARA,EACjCF,EAAO,IAAML,EAGbK,EAAO,IAAML,EAGH,IAARO,GAAqB,IAARA,GAAqB,IAARA,EAC5BF,EAAO,IAAML,EAEE,IAARO,GAAqB,IAARA,GAAqB,IAARA,EACjCF,EAAO,IAAML,EAGbK,EAAO,IAAML,EAGH,IAARO,GAAqB,IAARA,GAAqB,IAARA,IAC5BF,EAAO,IAAML,GAEH,IAARO,GAAqB,IAARA,GAAqB,IAARA,IAC5BF,EAAO,IAAML,IAIa,IAAxBK,EAAOU,SAAS,IAAwB,yBAAXb,EAC/BC,EAAU,0BAEoB,IAAvBE,EAAOU,QAAQ,GACtBZ,EAAU,wBAES,IAAZC,GACPD,EAAU,SAEd,EAGIK,EAAkB,GAChBQ,EAAU,WACdb,EAAU,IACVK,EAAkB,GAClB,IAAK,IAAIS,EAAI,EAAGA,EAAI,EAAGA,IACrBT,EAAgBU,MACd,SAAC,IAAG,CAAST,UAAU,sCAAqC,UAC1D,SAAC,IAAM,CAACA,UAAU,yCAAyCE,QAASL,EAAOM,KAAK,EAAMK,GAAG,UACvF,SAAC,MAAS,CAACJ,KApEJ,QAkEDI,IAOdH,GAAU,OAAIN,GAChB,GAEAW,EAAAA,EAAAA,YAAU,WACRH,GACF,GAAG,IAGH,OAA4Bf,EAAAA,EAAAA,UAASO,GAAgB,eAA9CY,EAAM,KAAEN,EAAS,KAExB,OACE,UAAC,IAAS,CAACO,OAAK,EAACZ,UAAU,oCAAmC,WAE5D,UAAC,IAAS,CAACa,MAAO,CAAEC,OAAQ,eAAiBd,UAAU,4CAA4Ce,UAAU,MAAMC,KAAkB,KAAXvB,EAAe,WACvI,SAAC,WAAgB,WACf,SAAC,UAAe,UAAC,kBAEnB,UAAC,SAAc,YACb,0BAAG,SAAC,MAAW,IAAG,sBAAkB,SAAC,MAAW,QAChD,wBAAKA,KACL,SAAC,IAAM,CAACS,QAASK,EAASU,QAAQ,4BAA2B,SAAC,wBAA2B,mBACzF,SAAC,IAAM,CAACf,QAAS,WAAQR,EAAU,GAAI,EAAGuB,QAAQ,2BAA0B,SAAC,sBAKjF,SAAC,IAAS,CAACL,OAAK,EAACZ,UAAU,2BAA0B,UACrD,UAAC,IAAS,CAACA,UAAU,sCAAqC,WACxD,SAAC,IAAS,CAACA,UAAU,gDAA+C,UACpE,SAAC,IAAG,CAACA,UAAU,iCAAgC,SAC9CW,OAIH,eAAIX,UAAU,yCAEd,SAAC,IAAM,CAACE,QAASK,EAASU,QAAQ,kBAAiB,SAAC,kCAK1D,C","sources":["components/pages/games/tictac.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Button, Container, Offcanvas } from \"react-bootstrap\";\r\nimport { BsJustify, BsCircle, BsXLg, BsHeartFill } from \"react-icons/bs\"\r\n\r\n\r\n\r\nconst TicTac = () => {\r\n  let point;\r\n  const [winner, setWinner] = useState(\"\")\r\n  const iconSize = 50;\r\n  //change button after click\r\n  let counter = 0;\r\n  let points = [0, 0, 0, 0, 0, 0, 0, 0]\r\n  const change = (idx) => {\r\n    //change index in background tab into new icon\r\n    fieldsGenerator[idx] =\r\n      <Col key={idx} className=\"col-4 d-flex justify-content-center\">\r\n        <Button disabled className=\"bg-success border border-dark m-1 p-2\" onClick={change.bind(this, idx)}>\r\n          {(counter % 2 === 0) ? <BsCircle size={iconSize} /> : <BsXLg size={iconSize} />}\r\n        </Button>\r\n      </Col>\r\n    //change state tab\r\n    setFields([...fieldsGenerator])\r\n    counter++\r\n\r\n    point = (counter % 2 === 0) ? 1 : -1\r\n    //tab indexes means : [row1, row2, row3, col1, col2, col3, diagonal1, diagonal2]\r\n\r\n    //rows\r\n    if (idx === 0 || idx === 1 || idx === 2) {\r\n      points[0] += point\r\n    }\r\n    else if (idx === 3 || idx === 4 || idx === 5) {\r\n      points[1] += point\r\n    }\r\n    else {\r\n      points[2] += point\r\n    }\r\n    //columns\r\n    if (idx === 0 || idx === 3 || idx === 6) {\r\n      points[3] += point\r\n    }\r\n    else if (idx === 1 || idx === 4 || idx === 7) {\r\n      points[4] += point\r\n    }\r\n    else {\r\n      points[5] += point\r\n    }\r\n    //diagonals\r\n    if (idx === 0 || idx === 4 || idx === 8) {\r\n      points[6] += point\r\n    }\r\n    if (idx === 2 || idx === 4 || idx === 6) {\r\n      points[7] += point\r\n    }\r\n\r\n    //check, if sbd wins or there is a draw\r\n    if (points.indexOf(-3) !== -1 && winner !== \"Wygrywa krzyżyk\") {\r\n      setWinner(\"Wygrywa kółko\")\r\n    }\r\n    else if (points.indexOf(3) !== -1) {\r\n      setWinner(\"Wygrywa krzyżyk\")\r\n    }\r\n    else if (counter === 9) {\r\n      setWinner(\"Remis!\")\r\n    }\r\n  }\r\n\r\n  //generate 9 index tab with tictactoe fields\r\n  let fieldsGenerator = []\r\n  const newGame = () => {\r\n    setWinner(\"\")\r\n    fieldsGenerator = []\r\n    for (let i = 0; i < 9; i++) {\r\n      fieldsGenerator.push(\r\n        <Col key={i} className=\"col-4 d-flex justify-content-center\">\r\n          <Button className=\"bg-success border border-light m-1 p-2\" onClick={change.bind(this, i)}>\r\n            <BsJustify size={iconSize} />\r\n          </Button>\r\n        </Col>\r\n      )\r\n    }\r\n    setFields([...fieldsGenerator])\r\n  }\r\n  //start a new game\r\n  useEffect(() => {\r\n    newGame()\r\n  }, [])\r\n\r\n  //state tab declaration\r\n  const [fields, setFields] = useState(fieldsGenerator);\r\n\r\n  return (\r\n    <Container fluid className=\"justify-content-center d-flex p-0\">\r\n      {/*offcanvas with info about game results*/}\r\n      <Offcanvas style={{ height: \"max-content\" }} className=\"text-center justify-content-center d-flex\" placement=\"top\" show={(winner !== \"\")}>\r\n        <Offcanvas.Header>\r\n          <Offcanvas.Title>Koniec gry</Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body>\r\n          <p><BsHeartFill /> Moje gratulacje! <BsHeartFill /></p>\r\n          <h3>{winner}</h3>\r\n          <Button onClick={newGame} variant=\"outline-success fs-3 my-3\">Zagraj jeszcze raz</Button><br />\r\n          <Button onClick={() => { setWinner(\"\") }} variant=\"outline-danger fs-3 my-3\">Wyjdź</Button>\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n\r\n      {/* game fields */}\r\n      <Container fluid className=\"p-0 m-0 col-11 col-sm-10\">\r\n      <Container className=\" p-0 rounded border-success border \" >\r\n        <Container className=\"col-12 col-md-9 d-flex justify-content-center\">\r\n        <Row className=\"col-12 col-md-10 col-xl-8 py-3\" >\r\n        {fields}\r\n        </Row >\r\n        </Container>\r\n\r\n      <hr className=\"mt-3 border border-success border-1\" />\r\n\r\n      <Button onClick={newGame} variant=\"danger fs-3 m-3\">Wyczyść pola</Button>\r\n      </Container>\r\n    </Container>\r\n      </Container>\r\n  )\r\n}\r\nexport default TicTac;"],"names":["point","useState","winner","setWinner","counter","points","change","idx","fieldsGenerator","className","disabled","onClick","bind","size","setFields","indexOf","newGame","i","push","useEffect","fields","fluid","style","height","placement","show","variant"],"sourceRoot":""}